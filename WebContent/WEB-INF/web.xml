<?xml version="1.0" encoding="UTF-8"?>

<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee   
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- 配置参数：driver（驱动程序） -->
	<context-param>
		<param-name>driver</param-name>
		<param-value>com.mysql.jdbc.Driver</param-value>
	</context-param>

	<!-- 配置数据库url -->
	<context-param>
		<param-name>url</param-name>
		<param-value>jdbc:mysql://localhost:3306/test</param-value>
	</context-param>

	<!-- 配置数据库用户 -->
	<context-param>
		<param-name>user</param-name>
		<param-value>root</param-value>
	</context-param>

	<!-- 配置数据库账号密码 -->
	<context-param>
		<param-name>pass</param-name>
		<param-value>yu328ting8MYS</param-value>
	</context-param>

	<!-- 学习config对象获取配置参数 -->
	<servlet>
		<!-- 指定Servlet名字 -->
		<servlet-name>config</servlet-name>
		<!-- 指定将哪个jsp页面配置成Servlet，路径相对于项目根目录 -->
		<jsp-file>/02/2.9/jspObject/configTest2.jsp</jsp-file>
		<!-- 配置名为name的参数，值为tanamo -->
		<init-param>
			<param-name>name</param-name>
			<param-value>tanamo</param-value>
		</init-param>
		<!-- 配置名为age的参数，值为23 -->
		<init-param>
			<param-name>age</param-name>
			<param-value>23</param-value>
		</init-param>
	</servlet>
	<!-- 指定将config Servlet配置到/config路径 -->
	<servlet-mapping>
		<servlet-name>config</servlet-name>
		<url-pattern>/02/2.9/jspObject/config</url-pattern>
	</servlet-mapping>

	<!-- 为FirstServlet这个Servlet类配置 -->
	<servlet>
		<!-- 指定Servlet的名字 -->
		<servlet-name>firstServlet</servlet-name>
		<!-- 指定Servlet的实现类 -->
		<servlet-class>jee02Servlet.FirstServlet</servlet-class>
	</servlet>
	<!-- 配置Servlet的URL -->
	<servlet-mapping>
		<!-- 指定Servlet的名字 -->
		<servlet-name>firstServlet</servlet-name>
		<!-- 指定Servlet映射的URL地址 -->
		<url-pattern>/02/2.10/ServletDemo/firstServlet</url-pattern>
	</servlet-mapping>

	<!-- 为TimerServlet配置 -->
	<!-- <servlet> -->
	<!-- Servlet名 -->
	<!-- <servlet-name>timeServlet</servlet-name> -->
	<!-- Servlet实现类 -->
	<!-- <servlet-class>jee02Servlet.TimerServlet</servlet-class> -->
	<!-- 配置应用启动时，创建Servlet实例 -->
	<!-- <load-on-startup>1</load-on-startup> -->
	<!-- </servlet> -->


	<!-- 为TestServlet配置 -->
	<servlet>
		<servlet-name>testServlet</servlet-name>
		<servlet-class>jee02Servlet.TestServlet</servlet-class>
		<init-param>
			<param-name>driver</param-name>
			<param-value>com.mysql.jdbc.Driver</param-value>
		</init-param>
		<init-param>
			<param-name>url</param-name>
			<param-value>jdbc:mysql://localhost:3306/test</param-value>
		</init-param>
		<init-param>
			<param-name>user</param-name>
			<param-value>root</param-value>
		</init-param>
		<init-param>
			<param-name>pass</param-name>
			<param-value>yu328ting8MYS</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>testServlet</servlet-name>
		<url-pattern>/02/2.10/ServletDemo/testServlet</url-pattern>
	</servlet-mapping>

	<!-- 为LoginServlet配置 -->
	<servlet>
		<servlet-name>login</servlet-name>
		<servlet-class>jee02Servlet.LoginServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>login</servlet-name>
		<url-pattern>/02/2.10/ServletDemo/login</url-pattern>
	</servlet-mapping>

	<!-- 定义Filter:log -->
	<filter>
		<!-- Filter的名字 -->
		<filter-name>log</filter-name>
		<!-- Filter的实现类 -->
		<filter-class>jee02Filter.LogFilter</filter-class>
	</filter>
	<!-- 定义Filter拦截的URI地址 -->
	<filter-mapping>
		<!-- Filter的名字 -->
		<filter-name>log</filter-name>
		<!-- Filter负责拦截的URI,为空不拦截起请求，为/*则拦截所有请求 -->
		<url-pattern></url-pattern>
	</filter-mapping>

	<!-- 定义Filter：authority -->
	<filter>
		<!-- Filter的名字 -->
		<filter-name>authority</filter-name>
		<!-- Filter的实现类 -->
		<filter-class>jee02Filter.AuthorityFilter</filter-class>
		<!-- 下面3个init-param元素配置了3个参数 -->
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
		<init-param>
			<param-name>loginPage</param-name>
			<param-value>/02/2.12/filterTest/login.jsp</param-value>
		</init-param>
		<init-param>
			<param-name>proLogin</param-name>
			<param-value>/02/2.12/filterTest/proLogin.jsp</param-value>
		</init-param>
	</filter>
	<!-- 定义Filter拦截的URL地址 -->
	<filter-mapping>
		<!-- Filter的名字 -->
		<filter-name>authority</filter-name>
		<!-- Filter负责拦截的URL,为空不拦截起请求，为/*则拦截所有请求 -->
		<url-pattern></url-pattern>
	</filter-mapping>
	
	
	<!-- 为GetConnListener配置Listener -->
	<!-- <listener> -->
	<!-- 指定Listener的实现类 -->
	<!-- <listener-class>jee02Listener.GetConnListener</listener-class> -->
	<!-- </listener> -->

</web-app>

